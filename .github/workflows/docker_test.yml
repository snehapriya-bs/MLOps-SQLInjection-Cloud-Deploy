name: Docker Image Test

on:
  push:
    branches:
      - main  # You can change this to any branch you want to test on
  pull_request:
    branches:
      - main  # Trigger for pull requests to the main branch

jobs:
  docker-test:
    runs-on: ubuntu-latest  # Use a GitHub-hosted runner (Ubuntu, for example)
    
    steps:
    # Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub (if needed)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: sneh1919  # Store your Docker Hub username in secrets
        password: ${{ secrets.DOCKER_TOKEN }}  # Store your Docker Hub password in secrets

    # Pull the Docker image
    - name: Pull Docker image
      run: docker pull sneh1919/sqlinjection-detector:latest

    # Run the Docker container (detached mode)
    - name: Run Docker container
      run: |
        docker run -d --name sqlinjection-detector -p 8080:8080 sneh1919/sqlinjection-detector:latest
        sleep 10  # Wait for the container to start up (adjust time as necessary)

    # Test if the container is running by checking the logs
    - name: Check container logs
      run: docker logs sqlinjection-detector

    # (Optional) Test the container by making an API call or checking its status
    - name: Test Docker container via curl
      run: |
        curl --fail http://localhost:8080 || exit 1  # Replace with the correct API endpoint or health check URL

    # Stop and remove the Docker container after testing
    - name: Clean up Docker container
      run: |
        docker stop sqlinjection-detector
        docker rm sqlinjection-detector
