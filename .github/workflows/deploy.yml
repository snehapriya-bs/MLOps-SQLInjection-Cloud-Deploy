name: Deploy to Cloud Run

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SERVICE_NAME: sql-injection-detector
      REGION: asia-south1
      DOCKER_HUB_IMAGE: sneh1919/sql-injection-detector:latest 

    steps:
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up GCP SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Enable Artifact Registry API
        run: |
          gcloud services enable artifactregistry.googleapis.com --project=${{ env.PROJECT_ID }}
          gcloud services enable run.googleapis.com  --project=${{ env.PROJECT_ID }}


      - name: Create Artifact Registry (if not exists)
        run: |
          if ! gcloud artifacts repositories describe sql-injection-detector --location=${{ env.REGION }} --project=${{ env.PROJECT_ID }} >/dev/null 2>&1; then
            gcloud artifacts repositories create sql-injection-detector \
              --repository-format=docker \
              --location=${{ env.REGION }} \
              --description="SQL Injection Detector Repository" \
              --project=${{ env.PROJECT_ID }}
          else
            echo "Artifact Registry already exists."
          fi

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # https://cloud.google.com/artifact-registry/docs/docker/pushing-and-pulling
      - name: Pull from Docker Hub
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker pull ${{ env.DOCKER_HUB_IMAGE }}
          docker tag ${{ env.DOCKER_HUB_IMAGE }} ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/sql-injection-detector/sql-injection-detector:$GITHUB_SHA
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/sql-injection-detector/sql-injection-detector:$GITHUB_SHA

      - name: Deploy to Cloud Run
        run: |

          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/sql-injection-detector/sql-injection-detector:$GITHUB_SHA \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --project=${{ env.PROJECT_ID }}

      - name: Test Cloud Run Endpoint
        run: |
          ENDPOINT=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --project=${{ env.PROJECT_ID }} --format 'value(status.url)')
          curl -X POST "$ENDPOINT/predict/" -F "file=@test_data.csv"
