name: Docker Build and Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # ✅ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ✅ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # ✅ Build Docker image
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: sneh1919/sql-injection-detector:latest 
          
  run-and-test:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # ✅ Pull the Docker image
      - name: Pull Docker image
        run: |
          docker pull sneh1919/sql-injection-detector:latest

      # ✅ Run Docker container
      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 snehapriya/sql-injection-detector:latest
          sleep 5

      # ✅ Upload test file and check for SQL Injection
      - name: Test SQL Injection Detection
        run: |
          echo "SELECT * FROM users WHERE id=1 OR 1=1;" > test_data.csv
          curl -X POST "http://localhost:8000/predict/" -F "file=@test_data.csv"

      # ✅ Stop container after test
      - name: Stop Docker container
        if: always()
        run: |
          docker ps -q --filter "ancestor=snehapriya/sql-injection-detector:latest" | xargs -r docker stop
